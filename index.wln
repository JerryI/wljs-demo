<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$350], 
   "Objects" -> <||>, "Path" -> 
    "/users/kirill/Github/demonstartion project/index.wln", 
   "Symbols" -> <||>|>, "Cells" -> 
  {<|"Data" -> ".html\n\n<style>\n  .ccontainer {\n    background: \
transparent !important;\n  }\n</style>\n<script>\nvar scriptEl = \
document.createElement('script');\nscriptEl.src = \
'https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.min.js';\nscriptE\
l.addEventListener('load', function() {\n   var vantaEl = \
document.createElement('script');\n   vantaEl.src = \
'https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.birds.min.js';\n   \
vantaEl.addEventListener('load', function() {\n    window.VANTA.BIRDS({\n     \
 el: \"main\",\n      mouseControls: true,\n      touchControls: true,\n      \
gyroControls: false,\n      minHeight: 200.00,\n      minWidth: 200.00,\n     \
 scale: 1.00,\n      scaleMobile: 1.00,\n      colorMode: \"lerp\",\n      \
cohesion: 62.00,\n      quantity: 3.00,\n      backgroundAlpha: 0.00\n    \
});\n   });\n   document.head.appendChild(vantaEl);\n  \n});\n  \
\ndocument.head.appendChild(scriptEl);\n</script>", 
    "Display" -> "codemirror", "Hash" -> 
     "9e2f27cd-354a-4b2f-8be9-b00fab7d138e", "Invisible" -> True, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> "\n<style>\n  .ccontainer {\n    background: transparent \
!important;\n  }\n</style>\n<script>\nvar scriptEl = \
document.createElement('script');\nscriptEl.src = \
'https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.min.js';\nscriptE\
l.addEventListener('load', function() {\n   var vantaEl = \
document.createElement('script');\n   vantaEl.src = \
'https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.birds.min.js';\n   \
vantaEl.addEventListener('load', function() {\n    window.VANTA.BIRDS({\n     \
 el: \"main\",\n      mouseControls: true,\n      touchControls: true,\n      \
gyroControls: false,\n      minHeight: 200.00,\n      minWidth: 200.00,\n     \
 scale: 1.00,\n      scaleMobile: 1.00,\n      colorMode: \"lerp\",\n      \
cohesion: 62.00,\n      quantity: 3.00,\n      backgroundAlpha: 0.00\n    \
});\n   });\n   document.head.appendChild(vantaEl);\n  \n});\n  \
\ndocument.head.appendChild(scriptEl);\n</script>", "Display" -> "html", 
    "Hash" -> "f5364b2e-801d-4a38-8919-b4495bc73bb9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n<h1><span style=\"color: #ee7676;\">WLJS \
Notebook</span><span style=\"color: #3a94c9;\"> Demonstration \
Project</span></h1>\n\nHere is a compilation of various notebooks showcasing \
examples of how to use the Wolfram Language and the dynamic features of our \
frontend, posted as static web pages. You can create your own page like this \
using the `Share` feature.\n\nEach example can be reopened in the app as a \
regular notebook by clicking on the question mark in the top-right \
corner.\n\n\n*Boids animation by VANTA.js project*", 
    "Display" -> "codemirror", "Hash" -> 
     "7cd7e655-86ad-4661-bad0-e4238f4fa5df", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> "><h1 ><span style=\"color: #ee7676;\">WLJS \
Notebook</span><span style=\"color: #3a94c9;\"> Demonstration \
Project</span></h1>\n\nHere is a compilation of various notebooks showcasing \
examples of how to use the Wolfram Language and the dynamic features of our \
frontend, posted as static web pages. You can create your own page like this \
using the `Share` feature.\n\nEach example can be reopened in the app as a \
regular notebook by clicking on the question mark in the top-right \
corner.\n\n\n*Boids animation by VANTA.js project*", "Display" -> "markdown", 
    "Hash" -> "fff25b46-2066-4aad-8814-4b07e4f6aea1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n## Useful links\n- \
[Documentation](https://jerryi.github.io/wljs-docs/)\n- \
[Releases](https://github.com/JerryI/wolfram-js-frontend/releases)\n- [Github \
discussions](https://github.com/JerryI/wolfram-js-frontend/discussions)", 
    "Display" -> "codemirror", "Hash" -> 
     "3bf3f874-4870-48b2-b696-4bda53f64519", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ">## Useful links\n- \
[Documentation](https://jerryi.github.io/wljs-docs/)\n- \
[Releases](https://github.com/JerryI/wolfram-js-frontend/releases)\n- [Github \
discussions](https://github.com/JerryI/wolfram-js-frontend/discussions)", 
    "Display" -> "markdown", "Hash" -> 
     "582d8e3f-b368-4bc5-a970-df11115913f1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n\n<div class=\"p-1 px-2 bg-gray-100 rounded \
text-gray-700 shadow\"><b>WLJS Notebook</b> is an open-source notebook \
interface created for a freeware implementation and a standard library of \
Wolfram Language - Wolfram Engine</div>", "Display" -> "codemirror", 
    "Hash" -> "6461b7f3-fe80-493b-baf1-22be547fca42", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> "><div class=\"p-1 px-2 bg-gray-100 rounded text-gray-700 \
shadow\"><b >WLJS Notebook</b> is an open-source notebook interface created \
for a freeware implementation and a standard library of Wolfram Language - \
Wolfram Engine</div>", "Display" -> "markdown", 
    "Hash" -> "4c4795eb-14f6-46c5-9472-51f22c36ee0e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, <|"Data" -> ".md\n---", 
    "Display" -> "codemirror", "Hash" -> 
     "0c9107ff-c061-4e54-8136-a694b6b44206", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, <|"Data" -> ">---", 
    "Display" -> "markdown", "Hash" -> 
     "166d7e2e-053c-408b-b0b8-a162e81566f6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n## Basics of Wolfram Language & WLJS\n\nAn introduction \
to the user interface, cell concepts, symbolic programming, and syntax \
sugar.\n\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Introduction](/wljs-demo/intro.html)\n- [2D Math \
input](/wljs-demo/syntax_sugar.html)\n- [Solving Equations on Rick \
Astley](/wljs-demo/image_mesh.html) a demonstration of multimodal data \
input\n- [Images analysis](/wljs-demo/images.html) another example on working \
with raster images inside a code cell\n- [Quantum \
mechanics](/wljs-demo/quantum_symbolics.html) a basic example of using \
Symbolic Programming to solve quantum mechanics problems analytically\n- \
[Forier series](/wljs-demo/series.html) ==an interactive example== on \
analytical fourier expansion of $Sin(x)$ function\n- \
[Audio](/wljs-demo/reverb.html) a short demo on processing audio samples in \
the notebook\n- *many more*\n\n</div>\n\n", "Display" -> "codemirror", 
    "Hash" -> "3795a4cc-5947-48b3-b570-d954423f00e3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ">## Basics of Wolfram Language & WLJS\n\nAn introduction to \
the user interface, cell concepts, symbolic programming, and syntax \
sugar.\n\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Introduction](/wljs-demo/intro.html)\n- [2D Math \
input](/wljs-demo/syntax_sugar.html)\n- [Solving Equations on Rick \
Astley](/wljs-demo/image_mesh.html) a demonstration of multimodal data \
input\n- [Images analysis](/wljs-demo/images.html) another example on working \
with raster images inside a code cell\n- [Quantum \
mechanics](/wljs-demo/quantum_symbolics.html) a basic example of using \
Symbolic Programming to solve quantum mechanics problems analytically\n- \
[Forier series](/wljs-demo/series.html) ==an interactive example== on \
analytical fourier expansion of $Sin(x)$ function\n- \
[Audio](/wljs-demo/reverb.html) a short demo on processing audio samples in \
the notebook\n- *many more*\n\n</div>", "Display" -> "markdown", 
    "Hash" -> "b7f0d50b-c436-429d-9c05-262c048d4869", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n## Data visualization\nSome examples on the data \
visualization using Woflram Language. Note that examples below do not cover \
even `10%` of the standard library. Please see the reference section in our \
documentation.\n\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded \
text-gray-700 shadow\">\n  \n- [`Plot`](/wljs-demo/plot.html) standard `Plot` \
function\n- [`Plot3D`](/wljs-demo/plot3d.html) family\n- \
[`Plotly`](/wljs-demo/plotly.html) an adaptation of a well-known `Plotly` \
library used in Javascript, Python and R\n- \
[`Histogram`](/wljs-demo/histogram.html) examples with histograms\n- \
[`Graphs`](/wljs-demo/graphs.html) demo of a standard library for building \
and computing using graphs\n- [`Dataset`](/wljs-demo/dataset.html) a dataset \
structure for representing and manipulating the data\n- [Lights and \
shadows](/wljs-demo/shadows_and_light.html) Plotting Hundreds of Polygons \
Using the Power of WebGL\n- *many more*\n\n</div>\n\nHere is some \
==interactive examples== on dynamic evaluation. **Try to drag sliders on a \
web-page**\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Quantum Well](/wljs-demo/quantum_well.html) a numberical \
solution for Schrodinger equation in a case of 1D confinment.\n- [Manipulate \
Plot](/wljs-demo/manipulate_plot.html) a basic example on a live data \
manipulation\n- [Maxwell FDTD](/wljs-demo/maxwell_fdtd.html) a numerical \
solution 1D wave propagating through a thin plate\n- \
[`AnimatePlot`](/wljs-demo/animation.html) simple backed animations for 2D \
plotting\n- [Atom shell](/wljs-demo/atom_shell.html) a custom animation of \
artistic interpretation of atomic shell\n- [Wave-equation 2D \
FEM](/wljs-demo/fem.html) a simple demonstration of FEM method used to solve \
wave-equation on a plane\n- [Basic dynamic evaluation \
1](/wljs-demo/orb.html)\n- [Basic dynamic evaluation \
2](/wljs-demo/select.html) \n- [Basic dynamic evaluation \
3](/wljs-demo/rotator.html) \n- *many more*\n\n</div>\n", 
    "Display" -> "codemirror", "Hash" -> 
     "d98ad087-ec52-437f-9983-f38a784aa8b2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ">## Data visualization\nSome examples on the data \
visualization using Woflram Language. Note that examples below do not cover \
even `10%` of the standard library. Please see the reference section in our \
documentation.\n\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded \
text-gray-700 shadow\">\n  \n- [`Plot`](/wljs-demo/plot.html) standard `Plot` \
function\n- [`Plot3D`](/wljs-demo/plot3d.html) family\n- \
[`Plotly`](/wljs-demo/plotly.html) an adaptation of a well-known `Plotly` \
library used in Javascript, Python and R\n- \
[`Histogram`](/wljs-demo/histogram.html) examples with histograms\n- \
[`Graphs`](/wljs-demo/graphs.html) demo of a standard library for building \
and computing using graphs\n- [`Dataset`](/wljs-demo/dataset.html) a dataset \
structure for representing and manipulating the data\n- [Lights and \
shadows](/wljs-demo/shadows_and_light.html) Plotting Hundreds of Polygons \
Using the Power of WebGL\n- *many more*\n\n</div>\n\nHere is some \
==interactive examples== on dynamic evaluation. **Try to drag sliders on a \
web-page**\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Quantum Well](/wljs-demo/quantum_well.html) a numberical \
solution for Schrodinger equation in a case of 1D confinment.\n- [Manipulate \
Plot](/wljs-demo/manipulate_plot.html) a basic example on a live data \
manipulation\n- [Maxwell FDTD](/wljs-demo/maxwell_fdtd.html) a numerical \
solution 1D wave propagating through a thin plate\n- \
[`AnimatePlot`](/wljs-demo/animation.html) simple backed animations for 2D \
plotting\n- [Atom shell](/wljs-demo/atom_shell.html) a custom animation of \
artistic interpretation of atomic shell\n- [Wave-equation 2D \
FEM](/wljs-demo/fem.html) a simple demonstration of FEM method used to solve \
wave-equation on a plane\n- [Basic dynamic evaluation \
1](/wljs-demo/orb.html)\n- [Basic dynamic evaluation \
2](/wljs-demo/select.html) \n- [Basic dynamic evaluation \
3](/wljs-demo/rotator.html) \n- *many more*\n\n</div>", 
    "Display" -> "markdown", "Hash" -> 
     "595e7fd2-ae72-4daf-8810-91bc62a240c2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n## Making data-driven presentation\nDesigning slides \
using code\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Introduction](/wljs-demo/intro_slides.html) \n- [Dynamics \
on slides](/wljs-demo/offload_slide.html)\n- [Animated \
backgrounds](/wljs-demo/ppt_background.html)\n- [Time-domain \
spectroscopy](/wljs-demo/fitting_tds_ppt.html) ==interactive \
presentation==\n- *many more*\n\n</div>", "Display" -> "codemirror", 
    "Hash" -> "cf16ee13-d486-4971-806c-d5fd5956ef9d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ">## Making data-driven presentation\nDesigning slides using \
code\n\n<div class=\"mt-2 p-2 px-4 bg-gray-100 rounded text-gray-700 \
shadow\">\n  \n- [Introduction](/wljs-demo/intro_slides.html) \n- [Dynamics \
on slides](/wljs-demo/offload_slide.html)\n- [Animated \
backgrounds](/wljs-demo/ppt_background.html)\n- [Time-domain \
spectroscopy](/wljs-demo/fitting_tds_ppt.html) ==interactive \
presentation==\n- *many more*\n\n</div>", "Display" -> "markdown", 
    "Hash" -> "9448923c-e3ed-4bdf-9ff5-b1b197a13a9e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ".md\n## Other languages integration\nHaving only one language \
in the notebook is not enough for your stunning ideas!\n\n<div class=\"mt-2 \
p-2 px-4 bg-gray-100 rounded text-gray-700 shadow\">\n  \n- [Javascript \
Gauge](/wljs-demo/js_gauge.html) an interactive demo on integrating \
Javascript objects into Wolfram Language\n- [Widgets using \
WLX](/wljs-demo/widgets_wlx.html) an interactive demo on designing widgets \
with HTML and Wolfram Language (WLX)\n- [WLX \
Tables](/wljs-demo/wlx_tables.html) a basic demo on making HTML tables based \
on Wolfram Language expressions\n- *many more*\n\n</div>", 
    "Display" -> "codemirror", "Hash" -> 
     "2f0319a1-e88b-40c1-8066-4e5e2bc32622", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> ">## Other languages integration\nHaving only one language in \
the notebook is not enough for your stunning ideas!\n\n<div class=\"mt-2 p-2 \
px-4 bg-gray-100 rounded text-gray-700 shadow\">\n  \n- [Javascript \
Gauge](/wljs-demo/js_gauge.html) an interactive demo on integrating \
Javascript objects into Wolfram Language\n- [Widgets using \
WLX](/wljs-demo/widgets_wlx.html) an interactive demo on designing widgets \
with HTML and Wolfram Language (WLX)\n- [WLX \
Tables](/wljs-demo/wlx_tables.html) a basic demo on making HTML tables based \
on Wolfram Language expressions\n- *many more*\n\n</div>", 
    "Display" -> "markdown", "Hash" -> 
     "deba30e2-2b29-4593-9e91-137870155b67", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "d0ba673a-f278-4344-b748-0fdd33bf6a3b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "7be4e1b5-e4a5-4f1a-aac1-0bd9be56abdc"|>}, "serializer" -> "jsfn4"|>
